---

---
title: "Analyse des donn√©es des √©lus"
author: "Thomas Papeix"
format: html
params:
  code_commune: "75056"
  code_departement: "75"
---

## Introduction

Ce rapport analyse les donn√©es des √©lus en fonction de leur commune et de leur d√©partement.\
Nous allons explorer la r√©partition des √©lus par cat√©gorie socio-professionnelle et la distribution des √¢ges.

------------------------------------------------------------------------

---

```{r setup, include=FALSE}
# Charger les packages
library(firstlibpeix)
library(ggplot2)
library(dplyr)
library(readr)

# V√©rifier si les param√®tres existent, sinon les d√©finir par d√©faut
if (!exists("params")) {
  params <- list(code_commune = "75056", code_departement = "75")
}

# D√©finir les param√®tres
code_commune <- as.character(params$code_commune)
code_departement <- as.character(params$code_departement)

# Charger les donn√©es
elus_sample <- read_delim("elus_sample.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)

# üîπ Standardiser les noms des colonnes (remplacer les espaces par "_")
colnames(elus_sample) <- gsub(" ", "_", colnames(elus_sample))

# V√©rifier la structure des donn√©es
head(elus_sample)



```

## **Ajouter l‚Äôanalyse d‚Äôun de commune et departement** 

```{r summary_commune}
## R√©sum√© de la commune s√©lectionn√©e

# V√©rifier que la colonne existe
if ("Code_de_la_commune" %in% colnames(elus_sample)) {

  # Convertir la colonne et le param√®tre en `character`
  elus_sample$Code_de_la_commune <- as.character(elus_sample$Code_de_la_commune)

  # Filtrer la commune
  data_commune <- elus_sample[elus_sample$Code_de_la_commune == code_commune, ]

  # V√©rifier que la commune existe
  if (nrow(data_commune) > 0) {
    data_commune <- creer_commune(data_commune)
    print(summary_commune(data_commune))  # üîπ FORCER L'AFFICHAGE
  } else {
    print("‚ö†Ô∏è Aucune donn√©e pour la commune s√©lectionn√©e.")
  }

} else {
  stop("Erreur : La colonne 'Code_de_la_commune' est absente du dataset.")
}


```

```{## **üîπ Bloc `summary_departement` corrig√©**}
`{r summary_departement}
## R√©sum√© du d√©partement s√©lectionn√©

# V√©rifier que la colonne existe
if ("Code_du_departement" %in% colnames(elus_sample)) {

  # Convertir la colonne et le param√®tre en character
  elus_sample$Code_du_departement <- as.character(elus_sample$Code_du_departement)

  # Filtrer le d√©partement
  data_departement <- elus_sample[elus_sample$Code_du_departement == code_departement, ]

  # V√©rifier que le d√©partement existe
  if (nrow(data_departement) > 0) {
    data_departement <- creer_departement(data_departement)
    print(summary_departement(data_departement))  # üîπ Forcer l'affichage
  } else {
    print("Aucune donn√©e pour le d√©partement s√©lectionn√©.")
  }

} else {
  stop("Erreur : La colonne 'Code_du_departement' est absente du dataset.")
}


```
